#use "topfind.camlp5";;
#camlp5o ;;
#require "pa_ppx.testutils";;
open Pa_ppx_testutils.Papr_util ;;

#require "camlp5.pr_o" ;;

let pp_ctyp ty = Fmt.(pf stdout "#<ctyp< %s >>" (Eprinter.apply Pcaml.pr_ctyp Pprintf.empty_pc ty));;
let pp_expr ty = Fmt.(pf stdout "#<expr< %s >>" (Eprinter.apply Pcaml.pr_expr Pprintf.empty_pc ty));;
let pp_patt ty = Fmt.(pf stdout "#<patt< %s >>" (Eprinter.apply Pcaml.pr_patt Pprintf.empty_pc ty));;

#install_printer pp_ctyp ;;
#install_printer pp_expr ;;
#install_printer pp_patt ;;


print_string "================ START ================\n";; flush stdout ;;

#require "camlp5.quotations";;
#require "pa_ppx.import";;
Pa_ppx_base.Pa_passthru.debug := true ;;
Pa_ppx_import.add_include "." ;;
Pa_ppx_import.add_package "camlp5,fmt" ;;

#trace Pa_ppx_import.reparse_cmi ;;

{|
[%%import: Sexp.sexp]
 |} |> PAPR.Implem.pa1 |> PAPR.Implem.pr |> print_string ;;


(*
;;; Local Variables: ***
;;; mode:tuareg ***
;;; End: ***

*)
